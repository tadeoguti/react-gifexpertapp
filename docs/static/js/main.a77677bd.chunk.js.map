{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","console","log","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,uBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACtCN,EAAc,MAOlB,UACI,8CACA,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBa,SAAEP,GACvBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAcE,EAAEU,OAAOJ,c,+BCNlBK,EAAO,uCAAI,WAAMC,GAAN,uBAAAC,EAAA,6DACdC,EADc,iDACmCC,UAAWH,GAD9C,+DAGDI,MAAOF,GAHN,cAGdG,EAHc,gBAICA,EAAKC,OAJN,uBAIbC,EAJa,EAIbA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAG1CN,QAAQC,IAAIW,GAbQ,kBAcbA,GAda,4CAAJ,sDCDPO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGlC,OACI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAMf,EAAKgB,IAAKN,IACrB,kCAAKA,EAAL,WCJCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EAEdhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAsBxC,OAfAC,qBAAW,WAEPxB,EAASC,GACRwB,MAAK,SAAAC,GAEEH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAIGqB,EDpB0BK,CAAc1B,GAAlCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAErB,OACI,qCACI,qBAAIJ,UAAU,mCAAd,cAAmDhB,EAAnD,OAECoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEX,qBAAKA,UAAU,aAAf,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEbrBgB,EAAe,WAAO,IAAD,EAGK3C,mBAAS,CAAC,qBAHf,mBAGxB4C,EAHwB,KAGZ7C,EAHY,KAU9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAEA,6BAEQ6C,EAAWnB,KAAK,SAACT,EAAS6B,GAAV,OACZ,cAAC,EAAD,CAEC7B,SAAaA,GADRA,Y,MClB9B8B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.a77677bd.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    \r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange =( e ) => {\r\n        console.log(e.target.value);\r\n        setinputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 2){\r\n            setCategories(cats => [ inputValue,...cats]);\r\n            setinputValue('');\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <h2>Add category</h2>\r\n            <input\r\n                type='text'\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            />\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n\r\nexport const getGifs =  async(category) =>  {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=lpxvamNNeSc75OS6YsKGlQI0Y02uPcMC`;\r\n    //const url = 'https://api.giphy.com/v1/gifs/search?q=Hentai&limit=10&api_key=lpxvamNNeSc75OS6YsKGlQI0Y02uPcMC';\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    console.log(gifs);\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = (  {title, url }) => {\r\n\r\n    //console.log(id, title, url)\r\n    return (\r\n        <div className=\"card animate__animated animate__backInDown\" >\r\n            <img src= {url} alt={title}/>\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    \r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__swing\"> {category} </h3> \r\n             \r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n            \r\n           { <div className=\"class-gird\"> \r\n             \r\n                 {\r\n                     images.map( img => (\r\n                         <GifGridItem \r\n                         key={img.id}\r\n                         {...img } />\r\n                     ))\r\n                 }\r\n            </div> }\r\n        </>\r\n\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        \r\n        getGifs( category )\r\n        .then(imgs => {\r\n    \r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false  \r\n              });    \r\n        })      \r\n\r\n    }, [category ])\r\n\r\n\r\n\r\n    return state; // {data: [], loading: true}; \r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n//Funcional Components\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  \r\n   const [categories, setCategories] = useState(['My hero academia']);\r\n\r\n//    const handleAdd = () => {\r\n//         setCategories( ['Boku no hero',...categories,'Naruto']);\r\n//        }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = { setCategories}/>\r\n            <hr />\r\n    \r\n            <ol>\r\n                { \r\n                    categories.map( (category,i ) => (\r\n                        <GifGrid \r\n                        key= {category}\r\n                         category = { category } /> \r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n\r\n    );\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\n\nimport './index.css';\n\n\nReactDOM.render(\n // <React.StrictMode>\n    <GifExpertApp /> ,\n  //</React.StrictMode>,\n  document.getElementById('root')\n);\n\n//GitExpertApp\n //<h2>GifExpertapp</h2>\n //<hr />\n\n\n"],"sourceRoot":""}